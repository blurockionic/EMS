





<h2 className="text-xl font-serif font-bold">Overview</h2>
<p>
  In version 1.0.08, we are excited to introduce several enhancements
  and improvements to the project. This release focuses on refining
  the user interface, addressing reported issues, and introducing new
  features to enhance the overall user experience.
</p>
<h2>New Features</h2>
<ol>
  <li>
    Redesigned Frontend
    <ol>
      <li>
        User Interface Overhaul: The frontend has undergone a
        significant redesign, featuring a modern and intuitive user
        interface.
      </li>
      <li>
        Improved Navigation: Streamlined navigation for a more
        user-friendly experience. New layouts and visual elements have
        been implemented to enhance usability.
      </li>
    </ol>
  </li>
  <li>
    Feature Enhancements
    <ol>
      <li>
        Dashboard Widgets: New widgets have been added to the
        dashboard, providing at-a-glance insights into key metrics.
        Users can now customize and rearrange widgets to suit their
        preferences.
      </li>
      <li>
        Advanced Search: The search functionality has been enhanced
        with advanced filtering options for more precise results.
      </li>
    </ol>
  </li>
  <li>
    Bug Fixes
    <ol>
      <li>Data synchronization</li>
      <li>User authentication</li>
      <li>Performance optimization</li>
    </ol>
  </li>
  <li>
    Important Notes
    <ol>
      <li>
        Compatibility: Ensure that your system meets the updated
        system requirements for optimal performance.
      </li>
      <li>
        User Guidance: A new user guide has been provided to assist
        users in adapting to the changes and utilizing the new
        features effectively.
      </li>
    </ol>
  </li>
</ol>
































<button
className="absolute w-[185px] h-[46px] top-[455px] left-[184px] bg-white rounded-[24px] hover:bg-slate-300 hover:scale-110 transform transition duration-500"
onClick={addbutton}
>
<p className="absolute w-[122px] h-[44px] top-[10px] left-[33px] [font-family:'Inter-Regular',Helvetica] font-normal text-black text-[24px] text-center tracking-[0] leading-[normal]">
  ADD
</p>
</button>
<div className="w-[245px] h-[34px] top-[36px] absolute left-[57px] [font-family:'Inter-Regular',Helvetica] font-normal text-black text-[24px] tracking-[0] leading-[normal]">
Training Name:
</div>
<div className="absolute w-[245px] h-[34px] top-[317px] left-[57px] [font-family:'Inter-Regular',Helvetica] font-normal text-black text-[24px] tracking-[0] leading-[normal]">
Certificate ID:
</div>
<div className="w-[235px] h-[27px] top-[178px] whitespace-nowrap absolute left-[57px] [font-family:'Inter-Regular',Helvetica] font-normal text-black text-[24px] tracking-[0] leading-[normal]">
Training Started:
</div>
<div className="absolute w-[235px] h-[27px] top-[178px] left-[316px] [font-family:'Inter-Regular',Helvetica] font-normal text-black text-[24px] tracking-[0] leading-[normal] whitespace-nowrap">
Training Ended:
</div>













{activeTab === "Task" && (
  <div className="p-4">
    <h2 className=" text-lg font-bold mb-2">Task Details</h2>
    <div className="container mx-auto">
      <table className="min-w-full bg-white border border-gray-300">
        <thead>
          <tr>
            <th className="py-2 px-4 border-b">S.No</th>
            <th className="py-2 px-4 border-b">Task ID</th>
            <th className="py-2 px-4 border-b">Task Name</th>
            <th className="py-2 px-4 border-b">Employee Name</th>
            <th className="py-2 px-4 border-b">Employee Name</th>
            <th className="py-2 px-4 border-b">Status</th>
            {/* Add more columns as needed */}
            <th className="py-2 px-4 border-b">Actions</th>
          </tr>
        </thead>
        <tbody>
          {allTask
            .filter((task) => task.employeeName === profile.name)
            .map((task, index) => (
              <tr key={task._id}>
                <td className="py-2 px-4 border-b text-center">
                  {index + 1}
                </td>
                <td className="py-2 px-4 border-b text-center">
                  {task._id}
                </td>
                <td className="py-2 px-4 border-b text-center">
                  {task.taskTitle}
                </td>
                <td className="py-2 px-4 border-b text-center">
                  {task.managerName}
                </td>
                <td className="py-2 px-4 border-b text-center">
                  {task.isTaskCompleted ? "Completed" : "In progress"}
                </td>
                {/* Add more cells based on your task object */}
                <td className="py-2 px-4 border-b flex items-center">
                  {task.isTaskCompleted ? (
                    <button
                      disabled
                      className="mx-auto bg-blue-500 hover:bg-blue-700 cursor-not-allowed text-white font-bold py-2 px-4 rounded"
                      onClick={() => handleReportClick(task)}
                    >
                      Report
                    </button>
                  ) : (
                    <button
                      className="mx-auto bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
                      onClick={() => handleReportClick(task)}
                    >
                      Report
                    </button>
                  )}
                </td>
              </tr>
            ))}
        </tbody>
      </table>
    </div>
  </div>
)}
